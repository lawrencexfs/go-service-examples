2020-09-28 10:49:51.879 [INF] [app.go:324] Start pprof http://:58080/debug/pprof
2020-09-28 10:49:51.879 [INF] [app.go:205] services[serviceA]
2020-09-28 10:49:51.938 [DBG] [app.go:126] App.init, appID: 4294967322
2020-09-28 10:49:51.938 [INF] [serviceA.go:23] ServiceA OnInit
2020-09-28 10:49:51.938 [DBG] [localService.go:68] service check : serviceA
2020-09-28 10:49:51.938 [DBG] [localService.go:96] service check success: serviceA
2020-09-28 10:49:51.938 [DBG] [localServiceMgr.go:56] App InitLocalService, name: serviceA sid: 4294967323
2020-09-28 10:49:51.938 [DBG] [serviceProxyMgr.go:77] AddServiceProxy, serviceInfo: &{4294967323 101 4294967322 map[OS:Windows Version:1.0.1]}
2020-09-28 10:49:51.942 [DBG] [localService.go:218] run service , serviceName: serviceA, serviceType: 101, ServerID: 4294967323 tickMS: 2000
2020-09-28 10:49:54.745 [INF] [app.go:324] Start pprof http://:58080/debug/pprof
2020-09-28 10:49:54.745 [INF] [app.go:205] services[serviceB]
2020-09-28 10:49:54.803 [INF] [app.go:326] listen tcp :58080: bind: Only one usage of each socket address (protocol/network address/port) is normally permitted.
2020-09-28 10:49:54.805 [DBG] [app.go:126] App.init, appID: 4294967324
2020-09-28 10:49:54.805 [DBG] [serviceB.go:19] ServiceBService.OnInit
2020-09-28 10:49:54.805 [DBG] [localService.go:68] service check : serviceB
2020-09-28 10:49:54.805 [DBG] [localService.go:96] service check success: serviceB
2020-09-28 10:49:54.805 [DBG] [localServiceMgr.go:56] App InitLocalService, name: serviceB sid: 4294967325
2020-09-28 10:49:54.805 [DBG] [serviceProxyMgr.go:77] AddServiceProxy, serviceInfo: &{4294967325 102 4294967324 map[OS:Linux Version:1.0.2]}
2020-09-28 10:49:54.809 [DBG] [localService.go:218] run service , serviceName: serviceB, serviceType: 102, ServerID: 4294967325 tickMS: 2000
2020-09-28 10:49:56.945 [DBG] [appProc.go:56] MsgProcClientVerifyReq, token: 4294967324
2020-09-28 10:49:56.945 [INF] [appNet.go:381] InsertSrvSess  4294967322
2020-09-28 10:49:56.946 [DBG] [serviceProxyMgr.go:77] AddServiceProxy, serviceInfo: &{4294967323 101 4294967322 map[OS:Windows Version:1.0.1]}
2020-09-28 10:49:56.947 [INF] [serviceB.go:49] ServiceB OnConnected, infovec = {4294967323 101 4294967322 map[OS:Windows Version:1.0.1]}
2020-09-28 10:49:56.947 [DBG] [serviceBRPCProc.go:20] RPCHello: hello World
2020-09-28 10:49:56.948 [DBG] [serviceBRPCProc.go:31] RPCSyncCall: 
2020-09-28 10:49:56.944 [DBG] [client.go:19] Dial protocol: tcp, addr: 127.0.0.1:17012
2020-09-28 10:49:56.944 [INF] [appNet.go:324] SrvNet try connect to 4294967324
2020-09-28 10:49:56.945 [INF] [appProc.go:94] BPClient.MsgProcClientVerifyResp: 
2020-09-28 10:49:56.945 [INF] [appNet.go:353] Connected to Server succeed !!!  4294967324
2020-09-28 10:49:56.947 [DBG] [serviceProxyMgr.go:77] AddServiceProxy, serviceInfo: &{4294967325 102 4294967324 map[OS:Linux Version:1.0.2]}
2020-09-28 10:49:56.947 [INF] [serviceA.go:88] ServiceA OnConnected, infovec = {4294967325 102 4294967324 map[OS:Linux Version:1.0.2]}
2020-09-28 10:49:56.949 [INF] [appProc.go:155] MsgProcCallRespMsg ErrString:, Seq:1
2020-09-28 10:49:56.949 [DBG] [serviceA.go:99] SyncCall result:call success
2020-09-28 10:49:56.949 [DBG] [serviceARPCProc.go:15] RPCHello: hello World
2020-09-28 10:49:57.944 [DBG] [serviceBRPCProc.go:20] RPCHello: hello World
2020-09-28 10:49:57.944 [DBG] [serviceBRPCProc.go:31] RPCSyncCall: 
2020-09-28 10:49:57.947 [INF] [appProc.go:155] MsgProcCallRespMsg ErrString:, Seq:2
2020-09-28 10:49:57.947 [DBG] [serviceA.go:63] SyncCall result:call success
2020-09-28 10:49:57.947 [DBG] [serviceARPCProc.go:15] RPCHello: hello World
2020-09-28 10:49:59.943 [DBG] [serviceBRPCProc.go:20] RPCHello: hello World
2020-09-28 10:49:59.943 [DBG] [serviceBRPCProc.go:31] RPCSyncCall: 
2020-09-28 10:49:59.944 [INF] [appProc.go:155] MsgProcCallRespMsg ErrString:, Seq:3
2020-09-28 10:49:59.944 [DBG] [serviceA.go:63] SyncCall result:call success
2020-09-28 10:49:59.944 [DBG] [serviceARPCProc.go:15] RPCHello: hello World
2020-09-28 10:50:01.943 [DBG] [serviceBRPCProc.go:20] RPCHello: hello World
2020-09-28 10:50:01.943 [DBG] [serviceBRPCProc.go:31] RPCSyncCall: 
2020-09-28 10:50:02.687 [ERR] [session.go:299] recvLoop error error: read tcp 127.0.0.1:17012->127.0.0.1:50031: wsarecv: An existing connection was forcibly closed by the remote host., remoteAddr: 127.0.0.1:50031,  localAddr: 127.0.0.1:17012, sessionid: 1
2020-09-28 10:50:02.687 [INF] [appProc.go:45] OnClosed sessID:1, remote addr:127.0.0.1:50031
2020-09-28 10:50:02.687 [DBG] [serviceProxyMgr.go:60] SProxyMgr, DelServiceByAppID : 4294967322
2020-09-28 10:50:02.687 [DBG] [serviceProxyMgr.go:121] DelServiceByID, serviceID: 4294967323
2020-09-28 10:50:02.687 [DBG] [serviceProxyMgr.go:129] DelServiceByID succeed, serviceID: 4294967323
2020-09-28 10:50:02.687 [INF] [serviceB.go:40] ServiceB OnDisconnected, infovec = {4294967323 101 4294967322 map[OS:Windows Version:1.0.1]}
2020-09-28 10:57:50.374 [INF] [app.go:324] Start pprof http://:58080/debug/pprof
2020-09-28 10:57:50.374 [INF] [app.go:205] services[serviceA]
2020-09-28 10:57:50.431 [DBG] [app.go:126] App.init, appID: 4294967301
2020-09-28 10:57:50.432 [INF] [serviceA.go:23] ServiceA OnInit
2020-09-28 10:57:50.432 [DBG] [localService.go:68] service check : serviceA
2020-09-28 10:57:50.432 [DBG] [localService.go:96] service check success: serviceA
2020-09-28 10:57:50.432 [DBG] [localServiceMgr.go:56] App InitLocalService, name: serviceA sid: 4294967302
2020-09-28 10:57:50.432 [DBG] [serviceProxyMgr.go:77] AddServiceProxy, serviceInfo: &{4294967302 101 4294967301 map[OS:Windows Version:1.0.1]}
2020-09-28 10:57:50.435 [DBG] [localService.go:218] run service , serviceName: serviceA, serviceType: 101, ServerID: 4294967302 tickMS: 2000
2020-09-28 10:57:53.371 [INF] [app.go:324] Start pprof http://:58080/debug/pprof
2020-09-28 10:57:53.371 [INF] [app.go:205] services[serviceB]
2020-09-28 10:57:53.43 [INF] [app.go:326] listen tcp :58080: bind: Only one usage of each socket address (protocol/network address/port) is normally permitted.
2020-09-28 10:57:53.432 [DBG] [app.go:126] App.init, appID: 4294967303
2020-09-28 10:57:53.432 [DBG] [serviceB.go:19] ServiceBService.OnInit
2020-09-28 10:57:53.432 [DBG] [localService.go:68] service check : serviceB
2020-09-28 10:57:53.432 [DBG] [localService.go:96] service check success: serviceB
2020-09-28 10:57:53.432 [DBG] [localServiceMgr.go:56] App InitLocalService, name: serviceB sid: 4294967304
2020-09-28 10:57:53.432 [DBG] [serviceProxyMgr.go:77] AddServiceProxy, serviceInfo: &{4294967304 102 4294967303 map[OS:Linux Version:1.0.2]}
2020-09-28 10:57:53.435 [DBG] [localService.go:218] run service , serviceName: serviceB, serviceType: 102, ServerID: 4294967304 tickMS: 2000
